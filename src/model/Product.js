/*
 * Selling Platform
 * This is a modified sample Petstore server. 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: emilieledoussal@yahoo.fr
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Category', 'model/Tag'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Category'), require('./Tag'));
  } else {
    // Browser globals (root is window)
    if (!root.SellingPlatform) {
      root.SellingPlatform = {};
    }
    root.SellingPlatform.Product = factory(root.SellingPlatform.ApiClient, root.SellingPlatform.Category, root.SellingPlatform.Tag);
  }
}(this, function(ApiClient, Category, Tag) {
  'use strict';

  /**
   * The Product model module.
   * @module model/Product
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Product</code>.
   * @alias module:model/Product
   * @class
   * @param photoUrls {Array.<String>} 
   */
  var exports = function(photoUrls) {
    this.photoUrls = photoUrls;
  };

  /**
   * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Product} obj Optional instance to populate.
   * @return {module:model/Product} The populated <code>Product</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('category'))
        obj.category = Category.constructFromObject(data['category']);
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('Location'))
        obj.location = ApiClient.convertToType(data['Location'], 'String');
      if (data.hasOwnProperty('photoUrls'))
        obj.photoUrls = ApiClient.convertToType(data['photoUrls'], ['String']);
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], [Tag]);
      if (data.hasOwnProperty('shipping'))
        obj.shipping = ApiClient.convertToType(data['shipping'], 'String');
    }
    return obj;
  }

  /**
   * @member {Number} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {module:model/Category} category
   */
  exports.prototype.category = undefined;

  /**
   * @member {String} title
   */
  exports.prototype.title = undefined;

  /**
   * @member {String} location
   */
  exports.prototype.location = undefined;

  /**
   * @member {Array.<String>} photoUrls
   */
  exports.prototype.photoUrls = undefined;

  /**
   * @member {Array.<module:model/Tag>} tags
   */
  exports.prototype.tags = undefined;

  /**
   * item type of shipment
   * @member {module:model/Product.ShippingEnum} shipping
   */
  exports.prototype.shipping = undefined;


  /**
   * Allowed values for the <code>shipping</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ShippingEnum = {
    /**
     * value: "shipping"
     * @const
     */
    shipping: "shipping",

    /**
     * value: "pickup"
     * @const
     */
    pickup: "pickup"
  };

  return exports;

}));
